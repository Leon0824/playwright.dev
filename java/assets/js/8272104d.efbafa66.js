"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[4130],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return h}});var r=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,s=function(e,t){if(null==e)return{};var a,r,s={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var a=e.components,s=e.mdxType,n=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),g=p(a),h=s,d=g["".concat(l,".").concat(h)]||g[h]||u[h]||n;return a?r.createElement(d,i(i({ref:t},c),{},{components:a})):r.createElement(d,i({ref:t},c))}));function h(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var n=a.length,i=new Array(n);i[0]=g;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:s,i[1]=o;for(var p=2;p<n;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}g.displayName="MDXCreateElement"},17393:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return h},default:function(){return k},frontMatter:function(){return g},metadata:function(){return d},toc:function(){return v}});var r=a(3905),s=Object.defineProperty,n=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,t,a)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,u=(e,t)=>{for(var a in t||(t={}))l.call(t,a)&&c(e,a,t[a]);if(o)for(var a of o(t))p.call(t,a)&&c(e,a,t[a]);return e};const g={id:"class-pageassertions",title:"PageAssertions"},h=void 0,d={unversionedId:"api/class-pageassertions",id:"version-1.18/api/class-pageassertions",title:"PageAssertions",description:"The PageAssertions] class provides assertion methods that can be used to make assertions about the [Page] state in the tests. A new instance of [PageAssertions] is created by calling [PlaywrightAssertions.assertThat(page):",source:"@site/versioned_docs/version-1.18/api/class-pageassertions.mdx",sourceDirName:"api",slug:"/api/class-pageassertions",permalink:"/java/docs/1.18/api/class-pageassertions",tags:[],version:"1.18",frontMatter:{id:"class-pageassertions",title:"PageAssertions"},sidebar:"version-1.18/api",previous:{title:"Page",permalink:"/java/docs/1.18/api/class-page"},next:{title:"PlaywrightAssertions",permalink:"/java/docs/1.18/api/class-playwrightassertions"}},m={},v=[{value:"PageAssertions.hasTitle(titleOrRegExp, options)",id:"page-assertions-to-have-title",level:2},{value:"PageAssertions.hasURL(urlOrRegExp, options)",id:"page-assertions-to-have-url",level:2},{value:"PageAssertions.not()",id:"page-assertions-not",level:2}],f={toc:v};function k(e){var t,a=e,{components:s}=a,c=((e,t)=>{var a={};for(var r in e)l.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&o)for(var r of o(e))t.indexOf(r)<0&&p.call(e,r)&&(a[r]=e[r]);return a})(a,["components"]);return(0,r.kt)("wrapper",(t=u(u({},f),c),n(t,i({components:s,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,"The ",(0,r.kt)("a",u({parentName:"p"},{href:"/java/docs/1.18/api/class-pageassertions",title:"PageAssertions"}),"PageAssertions")," class provides assertion methods that can be used to make assertions about the ",(0,r.kt)("a",u({parentName:"p"},{href:"/java/docs/1.18/api/class-page",title:"Page"}),"Page")," state in the tests. A new instance of ",(0,r.kt)("a",u({parentName:"p"},{href:"/java/docs/1.18/api/class-pageassertions",title:"PageAssertions"}),"PageAssertions")," is created by calling ",(0,r.kt)("a",u({parentName:"p"},{href:"/java/docs/1.18/api/class-playwrightassertions#playwright-assertions-expect-page"}),"PlaywrightAssertions.assertThat(page)"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-java"}),'...\nimport static com.microsoft.playwright.assertions.PlaywrightAssertions.assertThat;\n\npublic class TestPage {\n  ...\n  @Test\n  void navigatesToLoginPage() {\n    ...\n    page.click("#login");\n    assertThat(page).hasURL(Pattern.compile(".*/login"));\n  }\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"/java/docs/1.18/api/class-pageassertions#page-assertions-to-have-title"}),"PageAssertions.hasTitle(titleOrRegExp[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"/java/docs/1.18/api/class-pageassertions#page-assertions-to-have-url"}),"PageAssertions.hasURL(urlOrRegExp[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"/java/docs/1.18/api/class-pageassertions#page-assertions-not"}),"PageAssertions.not()"))),(0,r.kt)("h2",u({},{id:"page-assertions-to-have-title"}),"PageAssertions.hasTitle(titleOrRegExp","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"titleOrRegExp"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"page-assertions-to-have-title-option-title-or-reg-exp"})," ","<",(0,r.kt)("a",u({parentName:"li"},{href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"}),"String"),"|",(0,r.kt)("a",u({parentName:"li"},{href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html",title:"Pattern"}),"Pattern"),">"," Expected title or RegExp.",(0,r.kt)("a",{href:"#page-assertions-to-have-title-option-title-or-reg-exp",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"PageAssertions.HasTitleOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"page-assertions-to-have-title-option-timeout"})," ","<",(0,r.kt)("a",u({parentName:"li"},{href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"}),"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#page-assertions-to-have-title-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"page-assertions-to-have-title-return"})," ","<",(0,r.kt)("a",u({parentName:"li"},{href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"}),"void"),">",(0,r.kt)("a",{href:"#page-assertions-to-have-title-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the page has the given title."),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-java"}),'assertThat(page).hasTitle("Playwright");\n')),(0,r.kt)("h2",u({},{id:"page-assertions-to-have-url"}),"PageAssertions.hasURL(urlOrRegExp","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"urlOrRegExp"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"page-assertions-to-have-url-option-url-or-reg-exp"})," ","<",(0,r.kt)("a",u({parentName:"li"},{href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"}),"String"),"|",(0,r.kt)("a",u({parentName:"li"},{href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html",title:"Pattern"}),"Pattern"),">"," Expected substring or RegExp.",(0,r.kt)("a",{href:"#page-assertions-to-have-url-option-url-or-reg-exp",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"PageAssertions.HasURLOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"page-assertions-to-have-url-option-timeout"})," ","<",(0,r.kt)("a",u({parentName:"li"},{href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"}),"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#page-assertions-to-have-url-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"page-assertions-to-have-url-return"})," ","<",(0,r.kt)("a",u({parentName:"li"},{href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"}),"void"),">",(0,r.kt)("a",{href:"#page-assertions-to-have-url-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the page is navigated to the given URL."),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-java"}),'assertThat(page).hasURL(".com");\n')),(0,r.kt)("h2",u({},{id:"page-assertions-not"}),"PageAssertions.not()"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"page-assertions-not-return"})," ","<",(0,r.kt)("a",u({parentName:"li"},{href:"/java/docs/1.18/api/class-pageassertions",title:"PageAssertions"}),"PageAssertions"),">",(0,r.kt)("a",{href:"#page-assertions-not-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Makes the assertion check for the opposite condition. For example, this code tests that the page URL doesn't contain ",(0,r.kt)("inlineCode",{parentName:"p"},'"error"'),":"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-java"}),'assertThat(page).not().hasURL("error");\n')))}k.isMDXComponent=!0}}]);